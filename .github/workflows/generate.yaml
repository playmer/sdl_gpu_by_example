name: Deploy Site to Pages

on:
    # Runs on pushes targeting the default branch
    push:
      branches:
        - main

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

# Default to bash
defaults:
    run:
      # GitHub-hosted runners automatically enable `set -eo pipefail` for Bash shells.
      shell: bash

jobs:
  # linux-cmake:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - os: ubuntu-latest
  #           cc: gcc
  #         - os: ubuntu-latest
  #           cc: clang
    
  #   name: linux-${{ matrix.cc }}
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
        
  #     - uses: lukka/get-cmake@latest

  #     - name: install dependencies (Linux)
  #       run: |
  #         sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu `lsb_release -sc` main universe"
  #         sudo apt-get update -y -qq
  #         sudo apt-get install libasound2-dev libpulse-dev libwebp-dev libxrandr-dev tar

  #     - name: build
  #       working-directory: site/generator
  #       run: |
  #         cmake --preset=ninja -B build
  #         cmake --build build --config Release
          
  # ##########################################
  # mac:
  #   name: macos-build
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [macos-latest]

  #   runs-on: macos-latest
    
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
        
  #     - uses: lukka/get-cmake@latest

  #     - name: build
  #       working-directory: site/generator
  #       run: |
  #         cmake --preset=ninja -B build
  #         cmake --build build --config Release

  ##########################################
  windows-mingw:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            sys: mingw64
            env: x86_64
            arch: x86-64
            cc: gcc
          - os: windows-latest
            sys: mingw32
            env: i686
            arch: i686
            cc: gcc
    name: windows-${{matrix.env}}
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: 
          mingw-w64-${{matrix.env}}-toolchain
          mingw-w64-${{matrix.env}}-cmake
          ninja

    - shell: msys2 {0}
      name: Build and Test
      working-directory: site/generator
      run: |
        cmake -B build .
        cmake --build build --config Release

    - uses: actions/upload-artifact@v4
      with:
        name: Windows ${{matrix.arch}} CMake ${{matrix.sys}} Build
        path: ${{ github.workspace }}/onscripter-en.Windows.cmake.${{matrix.env}}.zip

  ##########################################
  windows-msvc:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            arch: x64
            target_arch: x86_64
          - os: windows-latest
            arch: amd64_arm64
            target_arch: arm64
    
    name: windows-msvc-${{ matrix.target_arch }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: lukka/get-cmake@latest

      - uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: ${{ matrix.arch }}

      - name: Build
        working-directory: site/generator
        shell: cmd
        run: |
          cmake --preset=ninja -B build
          cmake --build build --config Release

  # Build job
  site-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Configure Git
        run: git config core.quotepath false
      - name: Build with our site generator
        working-directory: site/generator
        run: |
          cargo run -- --no-serve
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site/generator/output

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: site-build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4